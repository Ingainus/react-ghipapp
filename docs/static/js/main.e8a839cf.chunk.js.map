{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","imag","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEdC,mBAAS,IAFK,mBAE3CC,EAF2C,KAE/BC,EAF+B,KAmBlD,OACE,0BAAMC,SAZa,SAACC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,OAQd,2BACEO,KAAK,OACLC,MAAQT,EACRU,SApBmB,SAACP,GACxBF,EAAeE,EAAEQ,OAAOF,YCNfG,EAAc,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAInC,OACE,yBAAKC,UAAU,0DACb,yBAAKC,IAAMF,EAAMG,IAAKJ,IACtB,+BAAMA,EAAN,O,uBCPOK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACfN,EADe,iDACiCO,UAAWF,GAD5C,+DAEFG,MAAMR,GAFJ,cAEfS,EAFe,gBAGAA,EAAKC,OAHL,uBAGdC,EAHc,EAGdA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QATjB,kBAYdY,GAZc,4CAAH,sDCGPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEhBpB,mBAAS,CACjC0B,KAAM,GACNQ,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAkBxC,OAXFC,qBAAW,WAETlB,EAASC,GACNkB,MAAM,SAAAC,GACLH,EAAS,CACPV,KAAMa,EACNL,SAAS,SAGZ,CAACd,IAEGe,EDfsBK,CAAcpB,GAAjCW,EAF2B,EAEhCL,KAAaQ,EAFmB,EAEnBA,QAEpB,OACE,oCACE,wBAAIlB,UAAU,qDAAsDI,GAClEc,GAAW,uBAAGlB,UAAU,oCAAb,gBACb,yBAAKA,UAAU,aAETe,EAAOH,KAAK,SAAAa,GAAI,OACd,kBAAC,EAAD,eACEC,IAAMD,EAAKX,IACPW,UEeLE,EA7BM,WAAM,IAAD,EAEY3C,mBAAS,CAAC,WAFtB,mBAEjB4C,EAFiB,KAEL7C,EAFK,KAQxB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEI6C,EAAWhB,KAAK,SAAAR,GAAQ,OACtB,kBAAC,EAAD,CACAsB,IAAKtB,EACLA,SAAUA,U,MChBtByB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e8a839cf.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const hadleInputChange = (e)=> {\r\n    setInputValue( e.target.value )\r\n  }\r\n\r\n  const handleSubmit = (e)=> {\r\n    e.preventDefault();\r\n\r\n    if(inputValue.trim().length > 2){\r\n      setCategories( cats => [inputValue,...cats]);\r\n      setInputValue('');\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input \r\n        type=\"text\"\r\n        value= {inputValue}\r\n        onChange= { hadleInputChange }\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n\r\n  //console.log(id, title, url);\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__bounce animate__fadeIn\">\r\n      <img src={ url } alt={title} />\r\n      <p> { title } </p>\r\n    </div>\r\n  )\r\n}\r\n","\r\n\r\nexport const getGifs = async ( category )=> {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=LMAn86qcMmtaCINbbhx7KRv4uWysH3hP`;\r\n  const resp = await fetch(url);\r\n  const {data} = await resp.json();\r\n  \r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n  return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const {data:images, loading} = useFetchGifs( category)\r\n    \r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__bounce animate__fadeIn\">{ category }</h3>\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading.....</p>}\r\n      <div className=\"card-grid\">\r\n          {\r\n            images.map( imag => (\r\n              <GifGridItem \r\n                key={ imag.id}\r\n                {...imag }\r\n              />\r\n            ))\r\n          }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n  \r\n  useEffect( ()=> {\r\n\r\n    getGifs( category )\r\n      .then( imgs => {\r\n        setstate({\r\n          data: imgs,\r\n          loading: false\r\n        });\r\n      });\r\n    }, [category]);\r\n\r\n    return state; // {data: [], loading:true}\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = ()=> {\r\n\r\n  const [categories, setCategories] = useState(['kurumi']);\r\n\r\n  // const handleAdd = ()=>{\r\n  //   setCategories([...categories, 'HunterXHunters']);\r\n  // }\r\n\r\n  return(\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories }/>\r\n      <hr />\r\n      \r\n      <ol>\r\n        {\r\n          categories.map( category => (\r\n            <GifGrid \r\n            key={category}\r\n            category={category} \r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}